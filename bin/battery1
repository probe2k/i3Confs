#!/usr/bin/env bash

percent=$(cat /sys/class/power_supply/BAT0/capacity)
stat=$(cat /sys/class/power_supply/BAT0/status)
battery_count=$(cat /sys/class/power_supply/BAT0/present)

squares="■"

dis_colors=("${C1:-#FF0027}" "${C2:-#FF3B05}" "${C3:-#FFB923}" 
            "${C4:-#FFD000}" "${C5:-#E4FF00}" "${C6:-#ADFF00}"
			"${C7:-#6DFF00}" "${C8:-#10BA00}") 
charging_color="${CHARGING_COLOR:-#00AFE3}"
full_color="${FULL_COLOR:-#FFFFFF}"
ac_color="${AC_COLOR:-#535353}"


while getopts 1:2:3:4:5:6:7:8:c:f:a:h opt; do
    case "$opt" in
        1) dis_colors[0]="$OPTARG";;
        2) dis_colors[1]="$OPTARG";;
        3) dis_colors[2]="$OPTARG";;
        4) dis_colors[3]="$OPTARG";;
        5) dis_colors[4]="$OPTARG";;
        6) dis_colors[5]="$OPTARG";;
        7) dis_colors[6]="$OPTARG";;
        8) dis_colors[7]="$OPTARG";;
        c) charging_color="$OPTARG";;
        f) full_color="$OPTARG";;
        a) ac_color="$OPTARG";;
        h) printf "Usage: batterybar [OPTION] color
        When discharging, there are 8 [1-8] levels colors.
        You can specify custom colors, for example:
        
        batterybar -1 red -2 \"#F6F6F6\" -8 green
        
        You can also specify the colors for the charging, AC and
        charged states:
        
        batterybar -c green -f white -a \"#EEEEEE\"\n";
        exit 0;
    esac
done

end=$(($battery_count - 1))
for i in $(seq 0 $end);
do
    if (( $percent > 0 && $percent < 20  )); then
        squares="■"
    elif (( $percent >= 20 && $percent < 40 )); then
        squares="■■"
    elif (( $percent >= 40 && $percent < 60 )); then
        squares="■■■"
    elif (( $percent >= 60 && $percent < 80 )); then
        squares="■■■■"
    elif (( $percent >=80 )); then
        squares="■■■■■"
    fi

    if [[ "$stat" = "Unknown" ]]; then
        squares="<sup>?</sup>$squares"
    fi

    case "$stat" in
    "Charging")
        color="$charging_color"
    ;;
    "Full")
        color="$full_color"
    ;;
    "AC")
        color="$ac_color"
    ;;
    "Discharging"|"Unknown")
        if (( $percent >= 0 && $percent < 10 )); then
            color="${dis_colors[0]}"
        elif (( $percent >= 10 && $percent < 20 )); then
            color="${dis_colors[1]}"
        elif (( $percent >= 20 && $percent < 30 )); then
            color="${dis_colors[2]}"
        elif (( $percent >= 30 && $percent < 40 )); then
            color="${dis_colors[3]}"
        elif (( $percent >= 40 && $percent < 60 )); then
            color="${dis_colors[4]}"
        elif (( $percent >= 60 && $percent < 70 )); then
            color="${dis_colors[5]}"
        elif (( $percent >= 70 && $percent < 80 )); then
            color="${dis_colors[6]}"
        elif (( $percent >= 80 )); then
            color="${dis_colors[7]}"
        fi
    ;;
    esac

    if (( $end > 0 )) ; then 
        message="$message $(($i + 1)):" 
    fi

    if [[ "$BLOCK_BUTTON" -eq 1 ]]; then 
        message="$message $stat <span foreground=\"$color\">$percent%</span>"
    fi
        message="$message <span foreground=\"$color\">$squares</span>" 
done

echo $message
